# MarkLogic Monitoring Plugin Configuration
#
# All commented values are the application default
#

[mlmonitor]

### Toggle application level debug (does not toggle framework debugging)
# debug = true

### Where external (third-party) plugins are loaded from
# plugin_dir = /var/lib/mlmonitor/plugins/

### Where all plugin configurations are loaded from
# plugin_config_dir = /etc/mlmonitor/plugins.d/

### Where external templates are loaded from
# template_dir = /var/lib/mlmonitor/templates/

[daemon]
pid_file = /Users/craig/Desktop/ml-monitoring-plugin/mlmonitor.pid

[log.mlmonitor_logger]

### Where the log file lives (no log file by default)
# file = none

### The level for which to log.  One of: info, warn, error, fatal, debug
level = info

### Whether or not to log to console
to_console = true

### Whether or not to rotate the log file when it reaches `max_bytes`
# rotate = false

### Max size in bytes that a log file can grow until it is rotated.
# max_bytes = 512000

### The maximun number of log files to maintain when rotating
# max_files = 4

[marklogic]

# Scheme to use when accessing MarkLogic management REST API (http|https).
scheme = http

# Host to use when accessing MarkLogic management REST API (FQDN hostname).
host = 138.68.29.220

# Port to use when accessing MarkLogic management REST API.
port = 8002

# Authentication to use when accessing MarkLogic management REST API (BASIC|DIGEST).
auth= DIGEST

# Username to use when accessing MarkLogic management REST API.
user = admin

# Password to use when accessing MarkLogic management REST API.
pass = admin

[newrelic]

# Your NewRelic license key.
key = a87392f9e45b9cc4339548f0b6e159887b3a3b0d

# Proxy (ex. http://10.10.1.10:3128).
http_proxy =

[plugin]

# NewRelic plugin display name.
name = marklogic_overstory

# Unique NewRelic plugin guid.
guid = com.marklogic_overstory

# Sample period in seconds.
duration = 60

# Set logging level (INFO|DEBUG|ERROR).
log_level = DEBUG

# Local cluster summary.
summary_status= True

# Database(s) detail status.
databases=

# Hosts summary.
hosts_summary_status= False

# Host(s) detail status.
hosts=

# Forests summary.
forests_summary_status= False

# Forest(s) detail status.
forests=

# Group(s) detail status.
groups=

# Servers summary.
servers_summary_status= False

# Server(s) detail status (must supply group name ex. ServerName:GroupName).
servers=


